// тестовый пайплайн.
// загружает из nexus архив .rar с одним файлом, загружает распакованный файл в http://10.116.99.190/files/presentation/ и проверяет что этот файл там появился
node('masterLin')
{
	def err
	def recipientlist = "sbt-uhanov-ae@mail.ca.sbrf.ru"
	def stagename = ''
	currentBuild.result = "SUCCESS"
    stagename = 'Загрузка дистрибутива из Nexus'
    stage(stagename)
    {
		try {
			ping www.ru
		}
		catch (caughtError)
		{
			err = caughtError
			currentBuild.result = "FAILURE"
			sendEmailNotification("FAILURE", stagename,recipientlist, "", "", "")
		}
    }
    
    stagename = 'Распаковка дистрибутива'
    stage(stagename)
    {
        try {
			
        }
		catch (caughtError)
			{
			err = caughtError
			currentBuild.result = "FAILURE"
			sendEmailNotification("FAILURE", stagename,recipientlist, "", "", "")
		}     
    }
    
	stagename = 'Загрузка дистрибутива на стенд'
    stage(stagename)
    {
        try {
			
        }
		catch (caughtError)
			{
			err = caughtError
			currentBuild.result = "FAILURE"
			sendEmailNotification("FAILURE", stagename,recipientlist, "", "", "")
		}     
    }
    
    stagename = 'Смок-тест'
    stage(stagename)
    {
    
    try {

			
        }
		catch (caughtError)
			{
			err = caughtError
			currentBuild.result = "FAILURE"
			sendEmailNotification("FAILURE", stagename,recipientlist, "", "", "")
		}     
    
    }

	stagename = 'Очистка workspace'
    stage(stagename)
    {
		try {
			
        }
		catch (caughtError)
			{
			err = caughtError
			currentBuild.result = "FAILURE"
			sendEmailNotification("FAILURE", stagename,recipientlist, "", "", "")
		}     
    }

	// окончательное оповещение
    sendEmailNotification(currentBuild.result, "pipeline",recipientlist, "", "", "")
}
